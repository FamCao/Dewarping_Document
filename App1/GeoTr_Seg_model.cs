// This file was automatically generated by VS extension Windows Machine Learning Code Generator v3
// from model file GeoTr_Seg_model.onnx
// Warning: This file may get overwritten if you add add an onnx file with the same name
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Windows.Media;
using Windows.Storage;
using Windows.Storage.Streams;
using Windows.AI.MachineLearning;
using System.Numerics.Tensors;

namespace App1
{
    
    public sealed class GeoTr_Seg_modelInput
    {
        public Tensor<float> input; // shape(-1,3,288,288)
    }
    
    public sealed class GeoTr_Seg_modelOutput
    {
        public TensorFloat output; // shape(-1,-1,-1,-1)
    }
    
    public sealed class GeoTr_Seg_modelModel
    {
        private LearningModel model;
        private LearningModelSession session;
        private LearningModelBinding binding;
        public static async Task<GeoTr_Seg_modelModel> CreateFromStreamAsync(IRandomAccessStreamReference stream)
        {
            GeoTr_Seg_modelModel learningModel = new GeoTr_Seg_modelModel();
            learningModel.model = await LearningModel.LoadFromStreamAsync(stream);
            learningModel.session = new LearningModelSession(learningModel.model);
            learningModel.binding = new LearningModelBinding(learningModel.session);
            return learningModel;
        }
        public async Task<GeoTr_Seg_modelOutput> EvaluateAsync(GeoTr_Seg_modelInput input)
        {
            binding.Bind("input", input.input);
            var result = await session.EvaluateAsync(binding, "0");
            var output = new GeoTr_Seg_modelOutput();
            output.output = result.Outputs["output"] as TensorFloat;
            return output;
        }
    }
}

